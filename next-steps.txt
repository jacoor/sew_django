Uwagi:
Nie ma sensu robić testów jednostkowych pól formularza poza polami z hasłem i peselem - pozostałe są natywnymi polami 
Django i jako takie są godne zaufania. Jedynym dodatkiem może być test jednostkowy pola ze zdjęciem, po modyfikacji jego
do obsługi tylko jpeg o konkretnych parametrach.
Dobre info nt. walidacji obrazków: 
http://stackoverflow.com/questions/20761092/how-to-validate-image-format-in-django-imagefield
Sens ma zrobienie testu integracyjnego całego formularza i sprawdzenie czy działa lub nie. 
1. Rejestracja uzytkownika 
    + zgody formalne (zgodnie z ustawą o ochronie danych osobowych)
    + pola z data readonly w adminie
    + numer finału w settings jako funkcja, zmieniana w lutym. Automatycznie.
    - funkcja do wyciągnięca daty urodzenia z peselu
    - pełne testy
    + username == email
    - ograniczenie zdjęc tylko do jpeg, wielkość i rozmiar
    - przeskalowanie
    - być może detekcja twarzy na zdjęciu
3. Poprawne przekierowywanie zalogowanego usera - admin do admina, normalny do profilu
4. Wysłanie maila po rejestracji
5. Potwierdzenie adresu email za pomocą linka w mailu
6. Opcja zmiany zdjęcia już po zarejestrowaniu przez użytkownika tylko do określonej daty/blokady profilu.
7. Modyfikacje panelu admina zgodnie z dokumentacją


Testy:
- zarejestrowanie uzytkownika za pomocą samego formularza z panelu admina (bez post) oraz zalogowanie sie na danego usera.
- zarejestrowanie uzytkownika za pomocą samego formularza ze strony rejestracji (bez post) oraz zalogowanie sie na danego usera.
- test integracyjny posta na widok z formularzem rejestracji - post z danymi + logowanie
- test integracyjny posta na widok z formularzem dodania usera w adminie - post z danymi + logowanie
Do powyższych testów wystarczy:
a) test walidacji formularza z admina (samego form)
b) utworzenie uzytkownika za pomocą poprawnych danych za pośrednictwem kazdego z powyzszych 4 przypadków